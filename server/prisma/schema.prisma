// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int          @id @default(autoincrement())
  username       String
  provider       String
  providerUserId String
  picture        String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  room           Room?        @relation(fields: [roomId], references: [id])
  roomId         String?
  submissions    Submission[]

  @@unique([provider, providerUserId])
}

model Room {
  id                       String         @id
  createdAt                DateTime       @default(now())
  updatedAt                DateTime       @updatedAt
  users                    User[]
  questions                RoomQuestion[]
  questionFilterKind       String
  questionFilterSelections String[]
  submissions              Submission[]
}

model Question {
  id          Int            @id
  title       String         @unique
  titleSlug   String         @unique
  difficulty  Difficulty
  rooms       RoomQuestion[]
  tags        String[]
  submissions Submission[]
}

model RoomQuestion {
  room       Room     @relation(fields: [roomId], references: [id])
  roomId     String
  question   Question @relation(fields: [questionId], references: [id])
  questionId Int

  @@id([roomId, questionId])
}

model Submission {
  id         String           @id @default(uuid())
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
  user       User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  question   Question         @relation(fields: [questionId], references: [id])
  questionId Int
  room       Room             @relation(fields: [roomId], references: [id], onDelete: Cascade)
  roomId     String
  status     SubmissionStatus

  @@unique([userId, questionId, roomId])
}

enum Difficulty {
  Easy
  Medium
  Hard
}

enum SubmissionStatus {
  Attempted
  Accepted
}
